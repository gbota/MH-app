version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        - NODE_ENV=production
    container_name: mh-backend
    ports:
      - "${PORT:-5050}:${PORT:-5050}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-5050}
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-admin123}@mongodb:27017/${MONGO_INITDB_DATABASE:-musichub}?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_here}
      - JWT_EXPIRE=${JWT_EXPIRE:-30d}
      - JWT_COOKIE_EXPIRE=${JWT_COOKIE_EXPIRE:-30}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./uploads:/usr/src/app/uploads
      - ./logs:/usr/src/app/logs
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - mh-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: mh-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    environment:
      - NODE_ENV=production
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - mh-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:6.0
    container_name: mh-mongodb
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-admin123}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-musichub}
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh ${MONGO_INITDB_DATABASE:-musichub} --quiet
      interval: 5s
      timeout: 5s
      start_period: 30s
      retries: 5
    networks:
      - mh-network

  mongo-express:
    image: mongo-express:1.0.0
    container_name: mh-mongo-express
    restart: always
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-admin123}
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    networks:
      - mh-network

  redis:
    image: redis:7-alpine
    container_name: mh-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - mh-network

networks:
  mh-network:
    name: mh-network
    driver: bridge

volumes:
  mongodb_data:
    name: mh_mongodb_data
  redis_data:
    name: mh_redis_data
